TAP version 14
# Subtest: Auth testleri
    # Subtest: Kullanıcı kaydı ve başarılı giriş
        not ok 1 - Signup status 201 olmalı
          ---
          compare: ===
          at:
            fileName: test\auth.test.js
            lineNumber: 20
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/auth.test.js:20:7)
          source: |2
                  payload: {  name: 'Test Kullanıcı',email, password },
                });
                t.equal(signupRes.statusCode, 201, 'Signup status 201 olmalı');
            ------^
          
                const loginRes = await fastify.inject({
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -201
            +404
          ...
        
        not ok 2 - Login status 200 olmalı
          ---
          compare: ===
          at:
            fileName: test\auth.test.js
            lineNumber: 27
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/auth.test.js:27:7)
          source: |2
                  payload: { email, password },
                });
                t.equal(loginRes.statusCode, 200, 'Login status 200 olmalı');
            ------^
              });
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -200
            +404
          ...
        
        1..2
    not ok 1 - Kullanıcı kaydı ve başarılı giriş # time=333.552ms
      ---
      at:
        fileName: test\auth.test.js
        lineNumber: 12
        columnNumber: 11
        typeName: Test
      source: |2
          await fastify.ready();          // tüm plugin'leri yükle
      
          await t.test('Kullanıcı kaydı ve başarılı giriş', async (t) => {
        ----------^
            const email = `test${Date.now()}@mail.com`;
      ...
    
    # Subtest: Giriş başarısız (yanlış şifre)
        not ok 1 - t.notEqual is not a function
          ---
          stack: |
            Test.<anonymous> (test/auth.test.js:44:7)
          at:
            fileName: test\auth.test.js
            lineNumber: 44
            columnNumber: 7
            typeName: Test
            methodName: <anonymous>
            functionName: Test.<anonymous>
          type: TypeError
          tapCaught: returnedPromiseRejection
          source: >2
                  payload: { email, password: 'yanlisSifre' },
                });
                t.notEqual(res.statusCode, 200, 'Yanlış şifre ile login başarılı olmamalı');
            ------^
              });
          ...
        
        1..1
    not ok 2 - Giriş başarısız (yanlış şifre) # time=11.371ms
      ---
      at:
        fileName: test\auth.test.js
        lineNumber: 30
        columnNumber: 11
        typeName: Test
      source: |2
          });
      
          await t.test('Giriş başarısız (yanlış şifre)', async (t) => {
        ----------^
            const email = `test${Date.now()}@mail.com`;
      ...
    
    1..2
not ok 1 - Auth testleri # time=430.458ms
  ---
  at:
    fileName: test\auth.test.js
    lineNumber: 8
    columnNumber: 1
    typeName: Object
  source: |
    const password = '123456';
  
    test('Auth testleri', async (t) => {
    ^
      const fastify = buildFastify(); // bellekte sunucu başlat
      await fastify.ready();          // tüm plugin'leri yükle
  ...

1..1
